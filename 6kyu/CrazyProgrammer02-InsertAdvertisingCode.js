
/**
 * Hey, young man, very glad to see you again in the madhouse, thank you for giving me a lot of help last time.

  Now I have a great job, are you interested in?

  My colleague myjinxin wanted to find a girlfriend, we as great programmers, what should we do?

  I have a good idea, insert ads in the code!

  We can do this:

  1. when someone converted numbers to a string, 
    we put the advertisement insertion strings inside.
  2. But if we do this, ads appear too frequently, 
    we should set a condition, only display ads in prime number
  OK, this is my great idea, we can imagine, myjinxin will be able to find a girlfriend very quickly, and soon the wedding, and soon gave birth to a child, is really great!

  I have written the advertising text, the rest of the work to you.

  Let's get to work!
 */



Number.prototype.toString = function() {
  var ads = "\nNow is the time for advertisements:\n"+
"My name is myjinxin, 25 years old, Male, \n"+
"unmarried, handsome, rich, looking for\n"+
"a lovely woman as a life partner\n";
const prime = {
  2:true,
  3:true,
  5:true,
  7:true,
  11:true,
  13:true,
  17:true,
  19:true,
  23:true,
  29:true,
  31:true,
  37:true,
  41:true,
  43:true,
  47:true,
  53:true,
  59:true,
  61:true,
  67:true,
  71:true,
  73:true,
  79:true,
  83:true,
  89:true,
  97:true,
  101:true,
  103:true,
  107:true,
  109:true,
  113:true,
  127:true,
  131:true,
  137:true,
  139:true,
  149:true,
  151:true,
  157:true,
  163:true,
  167:true,
  173:true,
  179:true,
  181:true,
  191:true,
  193:true,
  197:true,
  199:true,
  211:true,
  223:true,
  227:true,
  229:true,
  233:true,
  239:true,
  241:true,
  251:true,
  257:true,
  263:true,
  269:true,
  271:true,
  277:true,
  281:true,
  283:true,
  293:true,
  307:true,
  311:true,
  313:true,
  317:true,
  331:true,
  337:true,
  347:true,
  349:true,
  353:true,
  359:true,
  367:true,
  373:true,
  379:true,
  383:true,
  389:true,
  397:true,
  401:true,
  409:true,
  419:true,
  421:true,
  431:true,
  433:true,
  439:true,
  443:true,
  449:true,
  457:true,
  461:true,
  463:true,
  467:true,
  479:true,
  487:true,
  491:true,
  499:true,
  503:true,
  509:true,
  521:true,
  523:true,
  541:true,
  547:true,
  557:true,
  563:true,
  569:true,
  571:true,
  577:true,
  587:true,
  593:true,
  599:true,
  601:true,
  607:true,
  613:true,
  617:true,
  619:true,
  631:true,
  641:true,
  643:true,
  647:true,
  653:true,
  659:true,
  661:true,
  673:true,
  677:true,
  683:true,
  691:true,
  701:true,
  709:true,
  719:true,
  727:true,
  733:true,
  739:true,
  743:true,
  751:true,
  757:true,
  761:true,
  769:true,
  773:true,
  787:true,
  797:true,
  809:true,
  811:true,
  821:true,
  823:true,
  827:true,
  829:true,
  839:true,
  853:true,
  857:true,
  859:true,
  863:true,
  877:true,
  881:true,
  883:true,
  887:true,
  907:true,
  911:true,
  919:true,
  929:true,
  937:true,
  941:true,
  947:true,
  953:true,
  967:true,
  971:true,
  977:true,
  983:true,
  991:true,
  997:true,
  1009:true,
  1013:true,
  1019:true,
  1021:true,
  1031:true,
  1033:true,
  1039:true,
  1049:true,
  1051:true,
  1061:true,
  1063:true,
  1069:true,
  1087:true,
  1091:true,
  1093:true,
  1097:true,
  1103:true,
  1109:true,
  1117:true,
  1123:true,
  1129:true,
  1151:true,
  1153:true,
  1163:true,
  1171:true,
  1181:true,
  1187:true,
  1193:true,
  1201:true,
  1213:true,
  1217:true,
  1223:true,
};
let n = this.valueOf();
if (prime[n]) {
  return ads+n;
}

if (n%2 === 0) {
  return n;
}
return n;
}
